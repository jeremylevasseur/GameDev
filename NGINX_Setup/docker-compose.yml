version: '3.5'

services:
    # Handles traffic and redirects requests to the proper container with SSL encryption (if setup)
    reverse_proxy:
        image: nginx:1.17.10
        container_name: reverse_proxy
        depends_on:
            - mysql1
            - api
        volumes:
            - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
            - ./reverse_proxy/certs:/etc/nginx/certs
        ports:
            - '80:80'
            - '443:443'
        expose: 
            - '80'
            - '443'
        networks:
            - app-network

    # Container that runs the NGINX server
    web_server:
        container_name: web_server
        build: ./web_server/.
        restart: always
        tty: true
        volumes:
            - ./web_server:/var/www
            - ./web_server/conf.d/:/etc/nginx/conf.d/
        ports:
            - "85:85"
        networks:
            - app-network

    # Container that runs MySQL database
    mysql1:
        container_name: mysql1
        image: mysql:5.7
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=secret
            - TZ=US/Eastern
        ports:
            - '3306:3306'
        expose:
            - '3306'
        networks:
            - app-network
        volumes:
            -   type: bind
                source: ./database
                target: /docker-entrypoint-initdb.d

    # Container that runs the REST API (Node.js)
    api:
        container_name: api
        restart: always
        build: ./api/.
        volumes:
            - ./api:/usr/src/app
        depends_on:
            - mysql1
        ports:
            - "8081:8081"
        expose:
            - "8081"
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
